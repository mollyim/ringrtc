name: RingRTC CI
on:
  push:
    branches: [ master, 'staging/*' ]
  pull_request: # all target branches

jobs:
  code_formatting:
    name: Code Formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        components: rustfmt
    - name: Check format
      run: cd src/rust && cargo fmt -- --check

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        components: clippy
    - run: shellcheck **/*.sh bin/build-aar bin/build-cli bin/build-electron bin/build-ios bin/build-javadoc bin/build-rustdoc bin/build-target bin/fetch-android-deps bin/gsync-webrtc bin/install-ndk-toolchains bin/prepare-workspace bin/rust-lint-check src/rust/scripts/make-protos src/rust/scripts/run-tests
    - run: rm -rf out/rust-lint
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --target-dir=out/rust-lint --manifest-path=./src/rust/Cargo.toml --features sim -- -D warnings
    - run: rustup target add aarch64-linux-android aarch64-apple-ios
    - name: Clippy (Android)
      run: cargo clippy --target aarch64-linux-android -- -D warnings
      working-directory: src/rust
    - name: Clippy (iOS)
      run: cargo clippy --target aarch64-apple-ios -- -D warnings
      working-directory: src/rust
    - name: Clippy (Electron)
      run: cargo clippy --features electron -- -D warnings
      working-directory: src/rust
    - name: Clippy (gctc)
      run: cargo clippy --bin gctc --features native,http -- -D warnings
      working-directory: src/rust

  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
    - name: Run rust tests
      run: cd src/rust && ./scripts/run-tests
