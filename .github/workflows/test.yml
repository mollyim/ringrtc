name: Test

on:
  pull_request: # all target branches
  push: # all target branches
    paths-ignore:
      - '**/README*.md'
      - '.github/FUNDING.yml'
      - '.github/ISSUE_TEMPLATE/**'

permissions:
  contents: read

jobs:
  code_formatting:
    name: Code Formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup toolchain install $(cat rust-toolchain) --profile minimal --component rustfmt
    - name: Check rust format
      run: cargo fmt -- --check
    - name: Install for node
      run: yarn install --frozen-lockfile
      working-directory: src/node
    - name: Check typescript format
      run: yarn format -c
      working-directory: src/node

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
    - name: Cargo Cache
      uses: Swatinem/rust-cache@e207df5d269b42b69c8bc5101da26f7d31feddb4 # v2.6.2
      with:
        cache-targets: "false"
    - name: Install protoc
      run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
    - uses: actions/checkout@v3
    - run: rustup toolchain install $(cat rust-toolchain) --profile minimal --component clippy --target aarch64-linux-android,aarch64-apple-ios
    - name: Install extra Rust tools
      run: cargo +stable install --version 0.5.6 --locked cargo-about
    - run: shellcheck **/*.sh bin/build-aar bin/build-call_sim-cli bin/build-cli bin/build-electron bin/build-gctc bin/build-ios bin/build-javadoc bin/build-rustdoc bin/build-target bin/fetch-artifact bin/gsync-webrtc bin/prepare-workspace bin/rust-lint-check bin/set-up-for-cocoapods src/rust/scripts/run-tests
    - name: Check acknowledgments
      run: ./bin/regenerate_acknowledgments.sh && git diff --name-status --exit-code acknowledgments
    - name: Clippy
      run: cargo clippy --package ringrtc --tests --features sim -- -D warnings
    - name: Clippy (Android)
      run: cargo clippy --package ringrtc --target aarch64-linux-android -- -D warnings
    - name: Clippy (iOS)
      run: cargo clippy --package ringrtc --target aarch64-apple-ios -- -D warnings
    - name: Clippy (Electron)
      run: cargo clippy --package ringrtc --features electron -- -D warnings
    - name: Clippy (group_call)
      run: cargo clippy --package ringrtc --bin group_call --features native,http -- -D warnings
    - name: Clippy (call_link)
      run: cargo clippy --package ringrtc --bin call_link --features sim,http,rand_chacha -- -D warnings
    - name: Clippy (call_sim-cli)
      run: cargo clippy --package ringrtc --bin call_sim-cli --features call_sim -- -D warnings
    - name: Clippy (call_sim)
      run: cargo clippy --package call_sim -- -D warnings
    - name: Clippy (signaling_server)
      run: cargo clippy -- -D warnings
      working-directory: call_sim/docker/signaling_server
    - name: Install for node
      run: yarn install --frozen-lockfile
      working-directory: src/node
    - name: Check typescript
      run: yarn lint
      working-directory: src/node
    - name: Check package.json for prebuildChecksum
      run: >-
        grep -q '"prebuildChecksum": ""' package.json
      working-directory: src/node

  wrapper_validation:
    name: Validate Gradle wrapper
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run wrapper validation
        uses: gradle/wrapper-validation-action@v1

  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
    - name: Install protoc
      run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
    - uses: actions/checkout@v3
    - run: rustup toolchain install $(cat rust-toolchain) --profile minimal
    - name: Run rust tests
      run: cd src/rust && ./scripts/run-tests
