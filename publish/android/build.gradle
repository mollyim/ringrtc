buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.3'
    }
}

repositories {
    jcenter()
    google()
}

ext.version_number       = project.hasProperty('ci') ? (getCommitTag() - ~/^v/) : (ringrtcVersion ?: "0.0.1-SNAPSHOT")
ext.group_info           = "im.molly"

ext.debug_jni_lib_dirs   = project.hasProperty("debugRingrtcLibDirs") ? Eval.me(debugRingrtcLibDirs) : []
ext.release_jni_lib_dirs = project.hasProperty("releaseRingrtcLibDirs") ? Eval.me(releaseRingrtcLibDirs) : []

ext.proguard_file = rootDir.getAbsolutePath() + '/proguard-rules.pro'

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

archivesBaseName = "ringrtc-android"
version          = version_number

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'

    sourceSets {
        release {
            jniLibs.srcDirs = release_jni_lib_dirs
        }
        debug {
            jniLibs.srcDirs = debug_jni_lib_dirs
        }
    }

    defaultConfig {
        consumerProguardFiles proguard_file
    }

    packagingOptions {
        // Libraries are already stripped if necessary when linked.
        doNotStrip "**/*.so"
    }
}

dependencies {
    for (String dir : release_jni_lib_dirs) {
        releaseImplementation fileTree(dir: dir, include: ['*.jar'])
    }
    for (String dir : debug_jni_lib_dirs) {
        debugImplementation fileTree(dir: dir, include: ['*.jar'])
    }
}

afterEvaluate {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.release

                group = group_info
                artifactId = archivesBaseName
                version = version_number

                pom {
                    name = archivesBaseName
                    packaging = 'aar'
                    description = 'RingRTC for Android'
                    url = 'https://github.com/mollyim/ringrtc/'

                    scm {
                        url = 'https://github.com/mollyim/ringrtc/'
                        connection = 'scm:git:git://github.com/mollyim/ringrtc.git'
                        developerConnection = 'scm:git:git@github.com:mollyim/ringrtc.git'
                    }

                    licenses {
                        license {
                            name = 'AGPL-3.0-only'
                            url = 'https://www.gnu.org/licenses/agpl-3.0.txt'
                            distribution = 'repo'
                        }
                    }
                }
            }
        }

        repositories {
            mavenLocal()
            maven {
                name = 'GitHubPackages'
                url = uri('https://maven.pkg.github.com/mollyim/ringrtc')
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }

    tasks.withType(AbstractPublishToMaven) {
        dependsOn assembleRelease
    }

    task installArchives {
        dependsOn publishMavenJavaPublicationToMavenLocal
    }

    task uploadArchives {
        dependsOn publishMavenJavaPublicationToGitHubPackagesRepository
    }
}

def getCommitTag() {
    return "git describe --tags --exact-match".execute().text.trim() ?: "untagged"
}
