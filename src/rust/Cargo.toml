#
# Copyright 2019-2021 Signal Messenger, LLC
# SPDX-License-Identifier: AGPL-3.0-only
#

[package]
name = "ringrtc"
version = "2.37.1"
authors = ["Calling Team <callingteam@signal.org>"]
edition = "2021"
description = "A Rust interface for WebRTC"
license = "AGPL-3.0-only"

[lib]
crate_type = ["cdylib", "staticlib", "lib"]

[[bin]]
name = "direct"
required-features = ["native", "simnet"]

[[bin]]
name = "group_call"
required-features = ["native", "http"]

[[bin]]
name = "call_link"
# This binary doesn't depend on WebRTC at all, so either `sim` or `native` would work.
required-features = ["uuid", "sim", "http", "rand_chacha"]

[[bin]]
name = "call_sim-cli"
required-features = ["call_sim", "injectable_network"]

[dependencies]
regex-aot = { path = "regex-aot" }

aes               = { version = "0.8.3"  }
aes-gcm-siv       = { version = "0.11.1", features = ["aes"] }
anyhow            = { version = "1.0"    }
base64            = { version = "0.21.5" }
bytes             = { version = "1.0"    }
ctr               = { version = "0.9.2"  }
futures           = { version = "0.3"    }
hmac              = { version = "0.11"   }
lazy_static       = { version = "1.4"    }
libc              = { version = "0.2"    }
log               = { version = "0.4", features = ["std", "max_level_trace", "release_max_level_info"] }
num_enum          = { version = "0.7.1"  }
prost             = { version = "0.12.3" }
rand              = { version = "0.8.5", features = [] }
regex-automata    = { version = "0.4.3", default-features = false, features = ["dfa", "perf", "std"] }
hkdf              = { version = "0.11"   }
serde_json        = { version = "1.0"    }
serde             = { version = "1.0.193", features = ["derive"] }
serde_with        = { version = "3.4.0", features = ["base64", "hex"] }
hex               = { version = "0.4", features = ["serde"] }
sha2              = { version = "0.9.9"  }
static_assertions = { version = "1.1.0"  }
subtle            = { version = "2.4.1"  }
thiserror         = { version = "1.0.50" }
x25519-dalek      = { version = "2.0.0", features = ["static_secrets"] }

# Used by call links. Be careful not to pull in more than strictly needed, for both code size and
# maintenance reasons. In particular, anything involving credentials should be left to
# libsignal-client.
bincode = { version = "1.2.1" }
uuid = { version = "1.6.1", optional = true }
zkgroup = { git = "https://github.com/signalapp/libsignal", tag = "v0.37.0" }

# Optional, needed by the "electron" feature
neon = { version = "0.10.1", optional = true, default-features = false, features = ["napi-6", "channel-api", "try-catch-api"] }

# Optional, needed to check Android-specific code when not targeting Android
jni = { version = "0.21.1", optional = true, default-features = false }

# Optional, needed by the "http" feature
ureq = { version = "2.9.1", optional = true }
rustls = { version = "0.21.6", optional = true, features = ["dangerous_configuration"] }
webpki = { version = "0.22.4", optional = true }

# Optional, needed for call-link-test-client
rand_chacha = { version = "0.3.1", optional = true }

# Optional, needed by the "call_sim" feature
bitvec = {version = "1.0.1", optional = true }
chrono = {version = "0.4", optional = true }
clap = { version = "4.4.2", optional = true, features = ["derive"] }
fern = { version = "0.6", optional = true }
tokio = { version = "1.32.0", optional = true, features = ["rt-multi-thread"] }
tonic = { version = "0.10.2", optional = true }
tower = { version = "0.4", optional = true }

[target.'cfg(not(target_os="android"))'.dependencies]
# sysinfo depends on getgrgid_r, which was added in Android API level 24
sysinfo = { version = "0.29.11", default-features = false }

[features]
default = []
sim = []
electron = ["neon", "native"]
native = []
simnet = ["injectable_network"]
injectable_network = []
http = ["ureq", "rustls", "webpki"]
check-all = ["electron", "jni"]
call_sim = ["native", "injectable_network", "bitvec", "chrono", "clap", "fern", "tokio", "tonic", "tower"]

[[test]]
name = "incoming"
path = "tests/incoming.rs"
required-features = ["sim"]

[[test]]
name = "outgoing"
path = "tests/outgoing.rs"
required-features = ["sim"]

[target.'cfg(target_os="android")'.dependencies]
jni = { version = "0.21.1", default-features = false }

[build-dependencies]
prost-build = { version = "0.12.3" }
tonic-build = { version = "0.10.2" }

[dev-dependencies]
uuid = { version = "1.6.1" }
env_logger = { version = "0.10.1" }
rand_chacha = { version = "0.3" }
