plugins {
    id 'com.android.library' version '8.0.2'
    id 'maven-publish'
}

repositories {
    google()
    mavenCentral()
    mavenLocal()
}

ext.debug_jni_lib_dirs   = project.hasProperty("debugRingrtcLibDir") ? [debugRingrtcLibDir] : ["jniLibs"]
ext.release_jni_lib_dirs = project.hasProperty("releaseRingrtcLibDir") ? [releaseRingrtcLibDir] : ["jniLibs"]
ext.webrtc_jar           = project.hasProperty("webrtcJar") ? webrtcJar : "libs/libwebrtc.jar"
ext.asset_dir            = project.hasProperty("assetDir") ? assetDir : "assets"

android {
    namespace 'org.signal.ringrtc'

    compileSdk 34

    defaultConfig {
        minSdk 21
        targetSdk 33
        versionName ringrtcVersion
        archivesBaseName = "ringrtc-android"
        consumerProguardFiles "proguard-rules.pro"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        release {
            jniLibs.srcDirs = release_jni_lib_dirs
            java.srcDirs = ['api/']
            assets.srcDir asset_dir
        }
        debug {
            jniLibs.srcDirs = debug_jni_lib_dirs
            java.srcDirs = ['api/']
            assets.srcDir asset_dir
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
    }

    packagingOptions {
        // Libraries are already stripped if necessary when linked.
        doNotStrip "**/*.so"
    }

    publishing {
      singleVariant("release")
    }
}

dependencies {
    api files(webrtc_jar)
    api 'androidx.annotation:annotation:1.4.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.6'
    androidTestImplementation "androidx.test:runner:1.4.0"
    androidTestImplementation "androidx.test:core:1.4.0"
    androidTestImplementation "org.mockito:mockito-android:5.1.1"
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.release.java.sourceFiles
    classpath += files(android.bootClasspath)
    // There doesn't seem to be a convenient way to do this with just one variant.
    android.libraryVariants.all { v ->
        classpath += v.getCompileClasspath(null)
    }
    // Normally this is set by the 'java' plugin, but that's not compatible with 'android-library'
    if (project.hasProperty("docsDir")) {
        destinationDir = new File(docsDir, "javadoc")
    }
}

afterEvaluate {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.release

                group = 'im.molly'
                artifactId = archivesBaseName
                version = ringrtcVersion

                pom {
                    name = archivesBaseName
                    packaging = 'aar'
                    description = 'RingRTC for Android'
                    url = 'https://github.com/mollyim/ringrtc/'

                    scm {
                        url = 'https://github.com/mollyim/ringrtc/'
                        connection = 'scm:git:git://github.com/mollyim/ringrtc.git'
                        developerConnection = 'scm:git:git@github.com:mollyim/ringrtc.git'
                    }

                    licenses {
                        license {
                            name = 'AGPL-3.0-only'
                            url = 'https://www.gnu.org/licenses/agpl-3.0.txt'
                            distribution = 'repo'
                        }
                    }
                }
            }
        }
        repositories {
            mavenLocal()
            maven {
                name = 'GitHubPackages'
                url = uri('https://maven.pkg.github.com/mollyim/ringrtc')
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }

    tasks.withType(AbstractPublishToMaven) {
        dependsOn assembleRelease
    }

    task installArchives {
        dependsOn publishMavenJavaPublicationToMavenLocal
    }

    task uploadArchives {
        dependsOn publishMavenJavaPublicationToGitHubPackagesRepository
    }
}

task version {
    group 'Info'
    description = 'Prints the versions as read from the version config file.'
    doLast {
        println "RingRTC version: " + ringrtcVersion
        println "WebRTC version : " + project.webrtc_version
    }
}
